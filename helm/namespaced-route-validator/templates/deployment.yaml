apiVersion: apps/v1
kind: Deployment
metadata:
  name: route-validator
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  selector:
    matchLabels:
      app: route-validator
  template:
    metadata:
      labels:
        app: route-validator
    spec:
      containers:
        - name: route-validator
          image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          ports:
            - name: https
              containerPort: 8443
          {{- if .Values.deployment.startupProbe.enabled }}
          startupProbe: {{- include "namespaced-route-validator.render" (dict "value" (omit .Values.deployment.startupProbe "enabled") "context" $) | nindent 12 }}
            tcpSocket:
              port: https
          {{- else if .Values.deployment.customStartupProbe }}
          startupProbe: {{- include "namespaced-route-validator.render" (dict "value" .Values.deployment.customStartupProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.deployment.livenessProbe.enabled }}
          livenessProbe: {{- include "namespaced-route-validator.render" (dict "value" (omit .Values.deployment.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              scheme: HTTPS
              path: /healthz
              port: https
          {{- else if .Values.deployment.customLivenessProbe }}
          livenessProbe: {{- include "namespaced-route-validator.render" (dict "value" .Values.deployment.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.deployment.readinessProbe.enabled }}
          readinessProbe: {{- include "namespaced-route-validator.render" (dict "value" (omit .Values.deployment.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              scheme: HTTPS
              path: /healthz
              port: https
          {{- else if .Values.deployment.customReadinessProbe }}
          readinessProbe: {{- include "namespaced-route-validator.render" (dict "value" .Values.deployment.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: tls-certs
              mountPath: /certs
              readOnly: true
            - name: config
              mountPath: /etc/route-validator
              readOnly: true
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: LOG_LEVEL
              value: {{ .Values.deployment.logLevel | quote }}
      serviceAccountName: route-validator
      volumes:
        - name: tls-certs
          secret:
            secretName: {{ .Values.tls.existingSecret | default "route-validator-tls" }}
        - name: config
          configMap:
            name: route-validator-config